// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: command/command.proto

#include "command/command.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace mavsdk {
namespace rpc {
namespace command {
constexpr SendCommandLongRequest::SendCommandLongRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(nullptr){}
struct SendCommandLongRequestDefaultTypeInternal {
  constexpr SendCommandLongRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SendCommandLongRequestDefaultTypeInternal() {}
  union {
    SendCommandLongRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SendCommandLongRequestDefaultTypeInternal _SendCommandLongRequest_default_instance_;
constexpr CommandLong::CommandLong(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : target_system_(0u)
  , target_component_(0u)
  , command_(0u)
  , confirmation_(0u)
  , param1_(0)
  , param2_(0)
  , param3_(0)
  , param4_(0)
  , param5_(0)
  , param6_(0)
  , param7_(0){}
struct CommandLongDefaultTypeInternal {
  constexpr CommandLongDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CommandLongDefaultTypeInternal() {}
  union {
    CommandLong _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CommandLongDefaultTypeInternal _CommandLong_default_instance_;
constexpr SendCommandLongResponse::SendCommandLongResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_result_(nullptr){}
struct SendCommandLongResponseDefaultTypeInternal {
  constexpr SendCommandLongResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SendCommandLongResponseDefaultTypeInternal() {}
  union {
    SendCommandLongResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SendCommandLongResponseDefaultTypeInternal _SendCommandLongResponse_default_instance_;
constexpr CommandResult::CommandResult(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_str_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(0)
{}
struct CommandResultDefaultTypeInternal {
  constexpr CommandResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CommandResultDefaultTypeInternal() {}
  union {
    CommandResult _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CommandResultDefaultTypeInternal _CommandResult_default_instance_;
}  // namespace command
}  // namespace rpc
}  // namespace mavsdk
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_command_2fcommand_2eproto[4];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_command_2fcommand_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_command_2fcommand_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_command_2fcommand_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::command::SendCommandLongRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::command::SendCommandLongRequest, command_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::command::CommandLong, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::command::CommandLong, target_system_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::command::CommandLong, target_component_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::command::CommandLong, command_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::command::CommandLong, confirmation_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::command::CommandLong, param1_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::command::CommandLong, param2_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::command::CommandLong, param3_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::command::CommandLong, param4_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::command::CommandLong, param5_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::command::CommandLong, param6_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::command::CommandLong, param7_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::command::SendCommandLongResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::command::SendCommandLongResponse, command_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::command::CommandResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::command::CommandResult, result_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::command::CommandResult, result_str_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::mavsdk::rpc::command::SendCommandLongRequest)},
  { 6, -1, sizeof(::mavsdk::rpc::command::CommandLong)},
  { 22, -1, sizeof(::mavsdk::rpc::command::SendCommandLongResponse)},
  { 28, -1, sizeof(::mavsdk::rpc::command::CommandResult)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::command::_SendCommandLongRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::command::_CommandLong_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::command::_SendCommandLongResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::command::_CommandResult_default_instance_),
};

const char descriptor_table_protodef_command_2fcommand_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\025command/command.proto\022\022mavsdk.rpc.comm"
  "and\"J\n\026SendCommandLongRequest\0220\n\007command"
  "\030\001 \001(\0132\037.mavsdk.rpc.command.CommandLong\""
  "\325\001\n\013CommandLong\022\025\n\rtarget_system\030\001 \001(\r\022\030"
  "\n\020target_component\030\002 \001(\r\022\017\n\007command\030\003 \001("
  "\r\022\024\n\014confirmation\030\004 \001(\r\022\016\n\006param1\030\005 \001(\002\022"
  "\016\n\006param2\030\006 \001(\002\022\016\n\006param3\030\007 \001(\002\022\016\n\006param"
  "4\030\010 \001(\002\022\016\n\006param5\030\t \001(\002\022\016\n\006param6\030\n \001(\002\022"
  "\016\n\006param7\030\013 \001(\002\"T\n\027SendCommandLongRespon"
  "se\0229\n\016command_result\030\001 \001(\0132!.mavsdk.rpc."
  "command.CommandResult\"\340\003\n\rCommandResult\022"
  "8\n\006result\030\001 \001(\0162(.mavsdk.rpc.command.Com"
  "mandResult.Result\022\022\n\nresult_str\030\002 \001(\t\"\200\003"
  "\n\006Result\022\022\n\016RESULT_UNKNOWN\020\000\022\022\n\016RESULT_S"
  "UCCESS\020\001\022\024\n\020RESULT_NO_SYSTEM\020\002\022\033\n\027RESULT"
  "_CONNECTION_ERROR\020\003\022\017\n\013RESULT_BUSY\020\004\022\031\n\025"
  "RESULT_COMMAND_DENIED\020\005\022.\n*RESULT_COMMAN"
  "D_DENIED_LANDED_STATE_UNKNOWN\020\006\022$\n RESUL"
  "T_COMMAND_DENIED_NOT_LANDED\020\007\022\022\n\016RESULT_"
  "TIMEOUT\020\010\022*\n&RESULT_VTOL_TRANSITION_SUPP"
  "ORT_UNKNOWN\020\t\022%\n!RESULT_NO_VTOL_TRANSITI"
  "ON_SUPPORT\020\n\022\032\n\026RESULT_PARAMETER_ERROR\020\013"
  "\022\026\n\022RESULT_UNSUPPORTED\020\0142~\n\016CommandServi"
  "ce\022l\n\017SendCommandLong\022*.mavsdk.rpc.comma"
  "nd.SendCommandLongRequest\032+.mavsdk.rpc.c"
  "ommand.SendCommandLongResponse\"\000B!\n\021io.m"
  "avsdk.commandB\014CommandProtob\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_command_2fcommand_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_command_2fcommand_2eproto = {
  false, false, 1075, descriptor_table_protodef_command_2fcommand_2eproto, "command/command.proto", 
  &descriptor_table_command_2fcommand_2eproto_once, nullptr, 0, 4,
  schemas, file_default_instances, TableStruct_command_2fcommand_2eproto::offsets,
  file_level_metadata_command_2fcommand_2eproto, file_level_enum_descriptors_command_2fcommand_2eproto, file_level_service_descriptors_command_2fcommand_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_command_2fcommand_2eproto_getter() {
  return &descriptor_table_command_2fcommand_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_command_2fcommand_2eproto(&descriptor_table_command_2fcommand_2eproto);
namespace mavsdk {
namespace rpc {
namespace command {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CommandResult_Result_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_command_2fcommand_2eproto);
  return file_level_enum_descriptors_command_2fcommand_2eproto[0];
}
bool CommandResult_Result_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr CommandResult_Result CommandResult::RESULT_UNKNOWN;
constexpr CommandResult_Result CommandResult::RESULT_SUCCESS;
constexpr CommandResult_Result CommandResult::RESULT_NO_SYSTEM;
constexpr CommandResult_Result CommandResult::RESULT_CONNECTION_ERROR;
constexpr CommandResult_Result CommandResult::RESULT_BUSY;
constexpr CommandResult_Result CommandResult::RESULT_COMMAND_DENIED;
constexpr CommandResult_Result CommandResult::RESULT_COMMAND_DENIED_LANDED_STATE_UNKNOWN;
constexpr CommandResult_Result CommandResult::RESULT_COMMAND_DENIED_NOT_LANDED;
constexpr CommandResult_Result CommandResult::RESULT_TIMEOUT;
constexpr CommandResult_Result CommandResult::RESULT_VTOL_TRANSITION_SUPPORT_UNKNOWN;
constexpr CommandResult_Result CommandResult::RESULT_NO_VTOL_TRANSITION_SUPPORT;
constexpr CommandResult_Result CommandResult::RESULT_PARAMETER_ERROR;
constexpr CommandResult_Result CommandResult::RESULT_UNSUPPORTED;
constexpr CommandResult_Result CommandResult::Result_MIN;
constexpr CommandResult_Result CommandResult::Result_MAX;
constexpr int CommandResult::Result_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

class SendCommandLongRequest::_Internal {
 public:
  static const ::mavsdk::rpc::command::CommandLong& command(const SendCommandLongRequest* msg);
};

const ::mavsdk::rpc::command::CommandLong&
SendCommandLongRequest::_Internal::command(const SendCommandLongRequest* msg) {
  return *msg->command_;
}
SendCommandLongRequest::SendCommandLongRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.command.SendCommandLongRequest)
}
SendCommandLongRequest::SendCommandLongRequest(const SendCommandLongRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_command()) {
    command_ = new ::mavsdk::rpc::command::CommandLong(*from.command_);
  } else {
    command_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.command.SendCommandLongRequest)
}

inline void SendCommandLongRequest::SharedCtor() {
command_ = nullptr;
}

SendCommandLongRequest::~SendCommandLongRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.command.SendCommandLongRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SendCommandLongRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete command_;
}

void SendCommandLongRequest::ArenaDtor(void* object) {
  SendCommandLongRequest* _this = reinterpret_cast< SendCommandLongRequest* >(object);
  (void)_this;
}
void SendCommandLongRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SendCommandLongRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SendCommandLongRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.command.SendCommandLongRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && command_ != nullptr) {
    delete command_;
  }
  command_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SendCommandLongRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.command.CommandLong command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_command(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SendCommandLongRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.command.SendCommandLongRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.command.CommandLong command = 1;
  if (this->_internal_has_command()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::command(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.command.SendCommandLongRequest)
  return target;
}

size_t SendCommandLongRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.command.SendCommandLongRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.command.CommandLong command = 1;
  if (this->_internal_has_command()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *command_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SendCommandLongRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SendCommandLongRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SendCommandLongRequest::GetClassData() const { return &_class_data_; }

void SendCommandLongRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<SendCommandLongRequest *>(to)->MergeFrom(
      static_cast<const SendCommandLongRequest &>(from));
}


void SendCommandLongRequest::MergeFrom(const SendCommandLongRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.command.SendCommandLongRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_command()) {
    _internal_mutable_command()->::mavsdk::rpc::command::CommandLong::MergeFrom(from._internal_command());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SendCommandLongRequest::CopyFrom(const SendCommandLongRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.command.SendCommandLongRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendCommandLongRequest::IsInitialized() const {
  return true;
}

void SendCommandLongRequest::InternalSwap(SendCommandLongRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(command_, other->command_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SendCommandLongRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_command_2fcommand_2eproto_getter, &descriptor_table_command_2fcommand_2eproto_once,
      file_level_metadata_command_2fcommand_2eproto[0]);
}

// ===================================================================

class CommandLong::_Internal {
 public:
};

CommandLong::CommandLong(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.command.CommandLong)
}
CommandLong::CommandLong(const CommandLong& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&target_system_, &from.target_system_,
    static_cast<size_t>(reinterpret_cast<char*>(&param7_) -
    reinterpret_cast<char*>(&target_system_)) + sizeof(param7_));
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.command.CommandLong)
}

inline void CommandLong::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&target_system_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&param7_) -
    reinterpret_cast<char*>(&target_system_)) + sizeof(param7_));
}

CommandLong::~CommandLong() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.command.CommandLong)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CommandLong::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CommandLong::ArenaDtor(void* object) {
  CommandLong* _this = reinterpret_cast< CommandLong* >(object);
  (void)_this;
}
void CommandLong::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CommandLong::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CommandLong::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.command.CommandLong)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&target_system_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&param7_) -
      reinterpret_cast<char*>(&target_system_)) + sizeof(param7_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CommandLong::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 target_system = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          target_system_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 target_component = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          target_component_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 command = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          command_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 confirmation = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          confirmation_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float param1 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 45)) {
          param1_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float param2 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 53)) {
          param2_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float param3 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 61)) {
          param3_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float param4 = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 69)) {
          param4_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float param5 = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 77)) {
          param5_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float param6 = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 85)) {
          param6_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float param7 = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 93)) {
          param7_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CommandLong::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.command.CommandLong)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_system = 1;
  if (this->_internal_target_system() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_target_system(), target);
  }

  // uint32 target_component = 2;
  if (this->_internal_target_component() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_target_component(), target);
  }

  // uint32 command = 3;
  if (this->_internal_command() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_command(), target);
  }

  // uint32 confirmation = 4;
  if (this->_internal_confirmation() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_confirmation(), target);
  }

  // float param1 = 5;
  if (!(this->_internal_param1() <= 0 && this->_internal_param1() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(5, this->_internal_param1(), target);
  }

  // float param2 = 6;
  if (!(this->_internal_param2() <= 0 && this->_internal_param2() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(6, this->_internal_param2(), target);
  }

  // float param3 = 7;
  if (!(this->_internal_param3() <= 0 && this->_internal_param3() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(7, this->_internal_param3(), target);
  }

  // float param4 = 8;
  if (!(this->_internal_param4() <= 0 && this->_internal_param4() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(8, this->_internal_param4(), target);
  }

  // float param5 = 9;
  if (!(this->_internal_param5() <= 0 && this->_internal_param5() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(9, this->_internal_param5(), target);
  }

  // float param6 = 10;
  if (!(this->_internal_param6() <= 0 && this->_internal_param6() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(10, this->_internal_param6(), target);
  }

  // float param7 = 11;
  if (!(this->_internal_param7() <= 0 && this->_internal_param7() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(11, this->_internal_param7(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.command.CommandLong)
  return target;
}

size_t CommandLong::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.command.CommandLong)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 target_system = 1;
  if (this->_internal_target_system() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_target_system());
  }

  // uint32 target_component = 2;
  if (this->_internal_target_component() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_target_component());
  }

  // uint32 command = 3;
  if (this->_internal_command() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_command());
  }

  // uint32 confirmation = 4;
  if (this->_internal_confirmation() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_confirmation());
  }

  // float param1 = 5;
  if (!(this->_internal_param1() <= 0 && this->_internal_param1() >= 0)) {
    total_size += 1 + 4;
  }

  // float param2 = 6;
  if (!(this->_internal_param2() <= 0 && this->_internal_param2() >= 0)) {
    total_size += 1 + 4;
  }

  // float param3 = 7;
  if (!(this->_internal_param3() <= 0 && this->_internal_param3() >= 0)) {
    total_size += 1 + 4;
  }

  // float param4 = 8;
  if (!(this->_internal_param4() <= 0 && this->_internal_param4() >= 0)) {
    total_size += 1 + 4;
  }

  // float param5 = 9;
  if (!(this->_internal_param5() <= 0 && this->_internal_param5() >= 0)) {
    total_size += 1 + 4;
  }

  // float param6 = 10;
  if (!(this->_internal_param6() <= 0 && this->_internal_param6() >= 0)) {
    total_size += 1 + 4;
  }

  // float param7 = 11;
  if (!(this->_internal_param7() <= 0 && this->_internal_param7() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CommandLong::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CommandLong::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CommandLong::GetClassData() const { return &_class_data_; }

void CommandLong::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<CommandLong *>(to)->MergeFrom(
      static_cast<const CommandLong &>(from));
}


void CommandLong::MergeFrom(const CommandLong& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.command.CommandLong)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_target_system() != 0) {
    _internal_set_target_system(from._internal_target_system());
  }
  if (from._internal_target_component() != 0) {
    _internal_set_target_component(from._internal_target_component());
  }
  if (from._internal_command() != 0) {
    _internal_set_command(from._internal_command());
  }
  if (from._internal_confirmation() != 0) {
    _internal_set_confirmation(from._internal_confirmation());
  }
  if (!(from._internal_param1() <= 0 && from._internal_param1() >= 0)) {
    _internal_set_param1(from._internal_param1());
  }
  if (!(from._internal_param2() <= 0 && from._internal_param2() >= 0)) {
    _internal_set_param2(from._internal_param2());
  }
  if (!(from._internal_param3() <= 0 && from._internal_param3() >= 0)) {
    _internal_set_param3(from._internal_param3());
  }
  if (!(from._internal_param4() <= 0 && from._internal_param4() >= 0)) {
    _internal_set_param4(from._internal_param4());
  }
  if (!(from._internal_param5() <= 0 && from._internal_param5() >= 0)) {
    _internal_set_param5(from._internal_param5());
  }
  if (!(from._internal_param6() <= 0 && from._internal_param6() >= 0)) {
    _internal_set_param6(from._internal_param6());
  }
  if (!(from._internal_param7() <= 0 && from._internal_param7() >= 0)) {
    _internal_set_param7(from._internal_param7());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CommandLong::CopyFrom(const CommandLong& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.command.CommandLong)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommandLong::IsInitialized() const {
  return true;
}

void CommandLong::InternalSwap(CommandLong* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CommandLong, param7_)
      + sizeof(CommandLong::param7_)
      - PROTOBUF_FIELD_OFFSET(CommandLong, target_system_)>(
          reinterpret_cast<char*>(&target_system_),
          reinterpret_cast<char*>(&other->target_system_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CommandLong::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_command_2fcommand_2eproto_getter, &descriptor_table_command_2fcommand_2eproto_once,
      file_level_metadata_command_2fcommand_2eproto[1]);
}

// ===================================================================

class SendCommandLongResponse::_Internal {
 public:
  static const ::mavsdk::rpc::command::CommandResult& command_result(const SendCommandLongResponse* msg);
};

const ::mavsdk::rpc::command::CommandResult&
SendCommandLongResponse::_Internal::command_result(const SendCommandLongResponse* msg) {
  return *msg->command_result_;
}
SendCommandLongResponse::SendCommandLongResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.command.SendCommandLongResponse)
}
SendCommandLongResponse::SendCommandLongResponse(const SendCommandLongResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_command_result()) {
    command_result_ = new ::mavsdk::rpc::command::CommandResult(*from.command_result_);
  } else {
    command_result_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.command.SendCommandLongResponse)
}

inline void SendCommandLongResponse::SharedCtor() {
command_result_ = nullptr;
}

SendCommandLongResponse::~SendCommandLongResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.command.SendCommandLongResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SendCommandLongResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete command_result_;
}

void SendCommandLongResponse::ArenaDtor(void* object) {
  SendCommandLongResponse* _this = reinterpret_cast< SendCommandLongResponse* >(object);
  (void)_this;
}
void SendCommandLongResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SendCommandLongResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SendCommandLongResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.command.SendCommandLongResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && command_result_ != nullptr) {
    delete command_result_;
  }
  command_result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SendCommandLongResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.command.CommandResult command_result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_command_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SendCommandLongResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.command.SendCommandLongResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.command.CommandResult command_result = 1;
  if (this->_internal_has_command_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::command_result(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.command.SendCommandLongResponse)
  return target;
}

size_t SendCommandLongResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.command.SendCommandLongResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.command.CommandResult command_result = 1;
  if (this->_internal_has_command_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *command_result_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SendCommandLongResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SendCommandLongResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SendCommandLongResponse::GetClassData() const { return &_class_data_; }

void SendCommandLongResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<SendCommandLongResponse *>(to)->MergeFrom(
      static_cast<const SendCommandLongResponse &>(from));
}


void SendCommandLongResponse::MergeFrom(const SendCommandLongResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.command.SendCommandLongResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_command_result()) {
    _internal_mutable_command_result()->::mavsdk::rpc::command::CommandResult::MergeFrom(from._internal_command_result());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SendCommandLongResponse::CopyFrom(const SendCommandLongResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.command.SendCommandLongResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendCommandLongResponse::IsInitialized() const {
  return true;
}

void SendCommandLongResponse::InternalSwap(SendCommandLongResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(command_result_, other->command_result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SendCommandLongResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_command_2fcommand_2eproto_getter, &descriptor_table_command_2fcommand_2eproto_once,
      file_level_metadata_command_2fcommand_2eproto[2]);
}

// ===================================================================

class CommandResult::_Internal {
 public:
};

CommandResult::CommandResult(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.command.CommandResult)
}
CommandResult::CommandResult(const CommandResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_str_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_result_str().empty()) {
    result_str_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_result_str(), 
      GetArenaForAllocation());
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.command.CommandResult)
}

inline void CommandResult::SharedCtor() {
result_str_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
result_ = 0;
}

CommandResult::~CommandResult() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.command.CommandResult)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CommandResult::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  result_str_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CommandResult::ArenaDtor(void* object) {
  CommandResult* _this = reinterpret_cast< CommandResult* >(object);
  (void)_this;
}
void CommandResult::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CommandResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CommandResult::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.command.CommandResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_str_.ClearToEmpty();
  result_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CommandResult::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.command.CommandResult.Result result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_result(static_cast<::mavsdk::rpc::command::CommandResult_Result>(val));
        } else goto handle_unusual;
        continue;
      // string result_str = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_result_str();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mavsdk.rpc.command.CommandResult.result_str"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CommandResult::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.command.CommandResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.command.CommandResult.Result result = 1;
  if (this->_internal_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // string result_str = 2;
  if (!this->_internal_result_str().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result_str().data(), static_cast<int>(this->_internal_result_str().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mavsdk.rpc.command.CommandResult.result_str");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_result_str(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.command.CommandResult)
  return target;
}

size_t CommandResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.command.CommandResult)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result_str = 2;
  if (!this->_internal_result_str().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result_str());
  }

  // .mavsdk.rpc.command.CommandResult.Result result = 1;
  if (this->_internal_result() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CommandResult::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CommandResult::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CommandResult::GetClassData() const { return &_class_data_; }

void CommandResult::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<CommandResult *>(to)->MergeFrom(
      static_cast<const CommandResult &>(from));
}


void CommandResult::MergeFrom(const CommandResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.command.CommandResult)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result_str().empty()) {
    _internal_set_result_str(from._internal_result_str());
  }
  if (from._internal_result() != 0) {
    _internal_set_result(from._internal_result());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CommandResult::CopyFrom(const CommandResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.command.CommandResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommandResult::IsInitialized() const {
  return true;
}

void CommandResult::InternalSwap(CommandResult* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &result_str_, GetArenaForAllocation(),
      &other->result_str_, other->GetArenaForAllocation()
  );
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CommandResult::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_command_2fcommand_2eproto_getter, &descriptor_table_command_2fcommand_2eproto_once,
      file_level_metadata_command_2fcommand_2eproto[3]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace command
}  // namespace rpc
}  // namespace mavsdk
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::command::SendCommandLongRequest* Arena::CreateMaybeMessage< ::mavsdk::rpc::command::SendCommandLongRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::command::SendCommandLongRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::command::CommandLong* Arena::CreateMaybeMessage< ::mavsdk::rpc::command::CommandLong >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::command::CommandLong >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::command::SendCommandLongResponse* Arena::CreateMaybeMessage< ::mavsdk::rpc::command::SendCommandLongResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::command::SendCommandLongResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::command::CommandResult* Arena::CreateMaybeMessage< ::mavsdk::rpc::command::CommandResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::command::CommandResult >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
