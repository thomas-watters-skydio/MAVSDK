// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: poi/poi.proto

#include "poi/poi.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace mavsdk {
namespace rpc {
namespace poi {
constexpr SubscribePoiReportRequest::SubscribePoiReportRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct SubscribePoiReportRequestDefaultTypeInternal {
  constexpr SubscribePoiReportRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SubscribePoiReportRequestDefaultTypeInternal() {}
  union {
    SubscribePoiReportRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SubscribePoiReportRequestDefaultTypeInternal _SubscribePoiReportRequest_default_instance_;
constexpr PoiReportResponse::PoiReportResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : report_(nullptr){}
struct PoiReportResponseDefaultTypeInternal {
  constexpr PoiReportResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PoiReportResponseDefaultTypeInternal() {}
  union {
    PoiReportResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PoiReportResponseDefaultTypeInternal _PoiReportResponse_default_instance_;
constexpr PoiReport::PoiReport(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : q_()
  , approach_vector_start_()
  , approach_vector_end_()
  , approach_velocity_()
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , app6_symbol_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , uid_(uint64_t{0u})
  , time_utc_detected_(uint64_t{0u})
  , time_utc_updated_(uint64_t{0u})
  , time_boot_ms_(0u)
  , latitude_(0)
  , longitude_(0)
  , alt_msl_(0)
  , alt_ellip_(0)
  , alt_ground_(0)
  , classification_(0u)
  , x_(0)
  , y_(0)
  , z_(0)
  , dist_(0)
  , vel_n_(0)
  , vel_e_(0)
  , vel_d_(0)
  , hdg_(0)
  , height_(0)
  , width_(0)
  , depth_(0)
  , ttl_(0u)
  , confidence_overall_(0u)
  , confidence_detection_(0u)
  , confidence_classification_(0u)
  , confidence_localization_(0u)
  , status_flags_(0u)
  , geometry_(0u){}
struct PoiReportDefaultTypeInternal {
  constexpr PoiReportDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PoiReportDefaultTypeInternal() {}
  union {
    PoiReport _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PoiReportDefaultTypeInternal _PoiReport_default_instance_;
}  // namespace poi
}  // namespace rpc
}  // namespace mavsdk
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_poi_2fpoi_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_poi_2fpoi_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_poi_2fpoi_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_poi_2fpoi_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::poi::SubscribePoiReportRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::poi::PoiReportResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::poi::PoiReportResponse, report_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::poi::PoiReport, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::poi::PoiReport, uid_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::poi::PoiReport, time_utc_detected_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::poi::PoiReport, time_utc_updated_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::poi::PoiReport, time_boot_ms_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::poi::PoiReport, latitude_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::poi::PoiReport, longitude_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::poi::PoiReport, alt_msl_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::poi::PoiReport, alt_ellip_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::poi::PoiReport, alt_ground_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::poi::PoiReport, classification_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::poi::PoiReport, x_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::poi::PoiReport, y_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::poi::PoiReport, z_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::poi::PoiReport, q_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::poi::PoiReport, dist_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::poi::PoiReport, vel_n_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::poi::PoiReport, vel_e_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::poi::PoiReport, vel_d_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::poi::PoiReport, hdg_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::poi::PoiReport, height_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::poi::PoiReport, width_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::poi::PoiReport, depth_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::poi::PoiReport, approach_vector_start_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::poi::PoiReport, approach_vector_end_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::poi::PoiReport, approach_velocity_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::poi::PoiReport, ttl_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::poi::PoiReport, confidence_overall_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::poi::PoiReport, confidence_detection_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::poi::PoiReport, confidence_classification_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::poi::PoiReport, confidence_localization_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::poi::PoiReport, status_flags_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::poi::PoiReport, geometry_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::poi::PoiReport, name_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::poi::PoiReport, app6_symbol_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::mavsdk::rpc::poi::SubscribePoiReportRequest)},
  { 5, -1, sizeof(::mavsdk::rpc::poi::PoiReportResponse)},
  { 11, -1, sizeof(::mavsdk::rpc::poi::PoiReport)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::poi::_SubscribePoiReportRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::poi::_PoiReportResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::poi::_PoiReport_default_instance_),
};

const char descriptor_table_protodef_poi_2fpoi_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\rpoi/poi.proto\022\016mavsdk.rpc.poi\032\024mavsdk_"
  "options.proto\"\033\n\031SubscribePoiReportReque"
  "st\">\n\021PoiReportResponse\022)\n\006report\030\001 \001(\0132"
  "\031.mavsdk.rpc.poi.PoiReport\"\247\005\n\tPoiReport"
  "\022\013\n\003uid\030\001 \001(\004\022\031\n\021time_utc_detected\030\002 \001(\004"
  "\022\030\n\020time_utc_updated\030\003 \001(\004\022\024\n\014time_boot_"
  "ms\030\004 \001(\r\022\020\n\010latitude\030\005 \001(\005\022\021\n\tlongitude\030"
  "\006 \001(\005\022\017\n\007alt_msl\030\007 \001(\002\022\021\n\talt_ellip\030\010 \001("
  "\002\022\022\n\nalt_ground\030\t \001(\002\022\026\n\016classification\030"
  "\n \001(\r\022\t\n\001x\030\013 \001(\002\022\t\n\001y\030\014 \001(\002\022\t\n\001z\030\r \001(\002\022\t"
  "\n\001q\030\016 \003(\002\022\014\n\004dist\030\017 \001(\002\022\r\n\005vel_n\030\020 \001(\002\022\r"
  "\n\005vel_e\030\021 \001(\002\022\r\n\005vel_d\030\022 \001(\002\022\013\n\003hdg\030\023 \001("
  "\002\022\016\n\006height\030\024 \001(\002\022\r\n\005width\030\025 \001(\002\022\r\n\005dept"
  "h\030\026 \001(\002\022\035\n\025approach_vector_start\030\027 \003(\002\022\033"
  "\n\023approach_vector_end\030\030 \003(\002\022\031\n\021approach_"
  "velocity\030\031 \003(\002\022\013\n\003ttl\030\032 \001(\r\022\032\n\022confidenc"
  "e_overall\030\033 \001(\r\022\034\n\024confidence_detection\030"
  "\034 \001(\r\022!\n\031confidence_classification\030\035 \001(\r"
  "\022\037\n\027confidence_localization\030\036 \001(\r\022\024\n\014sta"
  "tus_flags\030\037 \001(\r\022\020\n\010geometry\030  \001(\r\022\014\n\004nam"
  "e\030! \001(\t\022\023\n\013app6_symbol\030\" \001(\t2t\n\nPoiServi"
  "ce\022f\n\022SubscribePoiReport\022).mavsdk.rpc.po"
  "i.SubscribePoiReportRequest\032!.mavsdk.rpc"
  ".poi.PoiReportResponse\"\0000\001B\031\n\rio.mavsdk."
  "poiB\010PoiProtob\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_poi_2fpoi_2eproto_deps[1] = {
  &::descriptor_table_mavsdk_5foptions_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_poi_2fpoi_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_poi_2fpoi_2eproto = {
  false, false, 981, descriptor_table_protodef_poi_2fpoi_2eproto, "poi/poi.proto", 
  &descriptor_table_poi_2fpoi_2eproto_once, descriptor_table_poi_2fpoi_2eproto_deps, 1, 3,
  schemas, file_default_instances, TableStruct_poi_2fpoi_2eproto::offsets,
  file_level_metadata_poi_2fpoi_2eproto, file_level_enum_descriptors_poi_2fpoi_2eproto, file_level_service_descriptors_poi_2fpoi_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_poi_2fpoi_2eproto_getter() {
  return &descriptor_table_poi_2fpoi_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_poi_2fpoi_2eproto(&descriptor_table_poi_2fpoi_2eproto);
namespace mavsdk {
namespace rpc {
namespace poi {

// ===================================================================

class SubscribePoiReportRequest::_Internal {
 public:
};

SubscribePoiReportRequest::SubscribePoiReportRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.poi.SubscribePoiReportRequest)
}
SubscribePoiReportRequest::SubscribePoiReportRequest(const SubscribePoiReportRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.poi.SubscribePoiReportRequest)
}

inline void SubscribePoiReportRequest::SharedCtor() {
}

SubscribePoiReportRequest::~SubscribePoiReportRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.poi.SubscribePoiReportRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SubscribePoiReportRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SubscribePoiReportRequest::ArenaDtor(void* object) {
  SubscribePoiReportRequest* _this = reinterpret_cast< SubscribePoiReportRequest* >(object);
  (void)_this;
}
void SubscribePoiReportRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SubscribePoiReportRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SubscribePoiReportRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.poi.SubscribePoiReportRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SubscribePoiReportRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SubscribePoiReportRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.poi.SubscribePoiReportRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.poi.SubscribePoiReportRequest)
  return target;
}

size_t SubscribePoiReportRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.poi.SubscribePoiReportRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SubscribePoiReportRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SubscribePoiReportRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SubscribePoiReportRequest::GetClassData() const { return &_class_data_; }

void SubscribePoiReportRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<SubscribePoiReportRequest *>(to)->MergeFrom(
      static_cast<const SubscribePoiReportRequest &>(from));
}


void SubscribePoiReportRequest::MergeFrom(const SubscribePoiReportRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.poi.SubscribePoiReportRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SubscribePoiReportRequest::CopyFrom(const SubscribePoiReportRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.poi.SubscribePoiReportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubscribePoiReportRequest::IsInitialized() const {
  return true;
}

void SubscribePoiReportRequest::InternalSwap(SubscribePoiReportRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SubscribePoiReportRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_poi_2fpoi_2eproto_getter, &descriptor_table_poi_2fpoi_2eproto_once,
      file_level_metadata_poi_2fpoi_2eproto[0]);
}

// ===================================================================

class PoiReportResponse::_Internal {
 public:
  static const ::mavsdk::rpc::poi::PoiReport& report(const PoiReportResponse* msg);
};

const ::mavsdk::rpc::poi::PoiReport&
PoiReportResponse::_Internal::report(const PoiReportResponse* msg) {
  return *msg->report_;
}
PoiReportResponse::PoiReportResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.poi.PoiReportResponse)
}
PoiReportResponse::PoiReportResponse(const PoiReportResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_report()) {
    report_ = new ::mavsdk::rpc::poi::PoiReport(*from.report_);
  } else {
    report_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.poi.PoiReportResponse)
}

inline void PoiReportResponse::SharedCtor() {
report_ = nullptr;
}

PoiReportResponse::~PoiReportResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.poi.PoiReportResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PoiReportResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete report_;
}

void PoiReportResponse::ArenaDtor(void* object) {
  PoiReportResponse* _this = reinterpret_cast< PoiReportResponse* >(object);
  (void)_this;
}
void PoiReportResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PoiReportResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PoiReportResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.poi.PoiReportResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && report_ != nullptr) {
    delete report_;
  }
  report_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PoiReportResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.poi.PoiReport report = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_report(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PoiReportResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.poi.PoiReportResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.poi.PoiReport report = 1;
  if (this->_internal_has_report()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::report(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.poi.PoiReportResponse)
  return target;
}

size_t PoiReportResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.poi.PoiReportResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.poi.PoiReport report = 1;
  if (this->_internal_has_report()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *report_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PoiReportResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PoiReportResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PoiReportResponse::GetClassData() const { return &_class_data_; }

void PoiReportResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<PoiReportResponse *>(to)->MergeFrom(
      static_cast<const PoiReportResponse &>(from));
}


void PoiReportResponse::MergeFrom(const PoiReportResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.poi.PoiReportResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_report()) {
    _internal_mutable_report()->::mavsdk::rpc::poi::PoiReport::MergeFrom(from._internal_report());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PoiReportResponse::CopyFrom(const PoiReportResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.poi.PoiReportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PoiReportResponse::IsInitialized() const {
  return true;
}

void PoiReportResponse::InternalSwap(PoiReportResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(report_, other->report_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PoiReportResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_poi_2fpoi_2eproto_getter, &descriptor_table_poi_2fpoi_2eproto_once,
      file_level_metadata_poi_2fpoi_2eproto[1]);
}

// ===================================================================

class PoiReport::_Internal {
 public:
};

PoiReport::PoiReport(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  q_(arena),
  approach_vector_start_(arena),
  approach_vector_end_(arena),
  approach_velocity_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.poi.PoiReport)
}
PoiReport::PoiReport(const PoiReport& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      q_(from.q_),
      approach_vector_start_(from.approach_vector_start_),
      approach_vector_end_(from.approach_vector_end_),
      approach_velocity_(from.approach_velocity_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  app6_symbol_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_app6_symbol().empty()) {
    app6_symbol_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_app6_symbol(), 
      GetArenaForAllocation());
  }
  ::memcpy(&uid_, &from.uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&geometry_) -
    reinterpret_cast<char*>(&uid_)) + sizeof(geometry_));
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.poi.PoiReport)
}

inline void PoiReport::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
app6_symbol_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&uid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&geometry_) -
    reinterpret_cast<char*>(&uid_)) + sizeof(geometry_));
}

PoiReport::~PoiReport() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.poi.PoiReport)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PoiReport::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  app6_symbol_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PoiReport::ArenaDtor(void* object) {
  PoiReport* _this = reinterpret_cast< PoiReport* >(object);
  (void)_this;
}
void PoiReport::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PoiReport::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PoiReport::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.poi.PoiReport)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  q_.Clear();
  approach_vector_start_.Clear();
  approach_vector_end_.Clear();
  approach_velocity_.Clear();
  name_.ClearToEmpty();
  app6_symbol_.ClearToEmpty();
  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&geometry_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(geometry_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PoiReport::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          uid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 time_utc_detected = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          time_utc_detected_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 time_utc_updated = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          time_utc_updated_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 time_boot_ms = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          time_boot_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 latitude = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          latitude_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 longitude = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          longitude_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float alt_msl = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 61)) {
          alt_msl_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float alt_ellip = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 69)) {
          alt_ellip_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float alt_ground = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 77)) {
          alt_ground_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // uint32 classification = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          classification_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float x = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 93)) {
          x_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float y = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 101)) {
          y_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float z = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 109)) {
          z_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // repeated float q = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_q(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 117) {
          _internal_add_q(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float dist = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 125)) {
          dist_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float vel_n = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 133)) {
          vel_n_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float vel_e = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 141)) {
          vel_e_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float vel_d = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 149)) {
          vel_d_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float hdg = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 157)) {
          hdg_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float height = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 165)) {
          height_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float width = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 173)) {
          width_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float depth = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 181)) {
          depth_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // repeated float approach_vector_start = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 186)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_approach_vector_start(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 189) {
          _internal_add_approach_vector_start(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // repeated float approach_vector_end = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 194)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_approach_vector_end(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 197) {
          _internal_add_approach_vector_end(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // repeated float approach_velocity = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 202)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_approach_velocity(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 205) {
          _internal_add_approach_velocity(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // uint32 ttl = 26;
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 208)) {
          ttl_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 confidence_overall = 27;
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 216)) {
          confidence_overall_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 confidence_detection = 28;
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 224)) {
          confidence_detection_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 confidence_classification = 29;
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 232)) {
          confidence_classification_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 confidence_localization = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 240)) {
          confidence_localization_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 status_flags = 31;
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 248)) {
          status_flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 geometry = 32;
      case 32:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 0)) {
          geometry_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 33;
      case 33:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mavsdk.rpc.poi.PoiReport.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string app6_symbol = 34;
      case 34:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_app6_symbol();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mavsdk.rpc.poi.PoiReport.app6_symbol"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PoiReport::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.poi.PoiReport)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 uid = 1;
  if (this->_internal_uid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_uid(), target);
  }

  // uint64 time_utc_detected = 2;
  if (this->_internal_time_utc_detected() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_time_utc_detected(), target);
  }

  // uint64 time_utc_updated = 3;
  if (this->_internal_time_utc_updated() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_time_utc_updated(), target);
  }

  // uint32 time_boot_ms = 4;
  if (this->_internal_time_boot_ms() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_time_boot_ms(), target);
  }

  // int32 latitude = 5;
  if (this->_internal_latitude() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_latitude(), target);
  }

  // int32 longitude = 6;
  if (this->_internal_longitude() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_longitude(), target);
  }

  // float alt_msl = 7;
  if (!(this->_internal_alt_msl() <= 0 && this->_internal_alt_msl() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(7, this->_internal_alt_msl(), target);
  }

  // float alt_ellip = 8;
  if (!(this->_internal_alt_ellip() <= 0 && this->_internal_alt_ellip() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(8, this->_internal_alt_ellip(), target);
  }

  // float alt_ground = 9;
  if (!(this->_internal_alt_ground() <= 0 && this->_internal_alt_ground() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(9, this->_internal_alt_ground(), target);
  }

  // uint32 classification = 10;
  if (this->_internal_classification() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(10, this->_internal_classification(), target);
  }

  // float x = 11;
  if (!(this->_internal_x() <= 0 && this->_internal_x() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(11, this->_internal_x(), target);
  }

  // float y = 12;
  if (!(this->_internal_y() <= 0 && this->_internal_y() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(12, this->_internal_y(), target);
  }

  // float z = 13;
  if (!(this->_internal_z() <= 0 && this->_internal_z() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(13, this->_internal_z(), target);
  }

  // repeated float q = 14;
  if (this->_internal_q_size() > 0) {
    target = stream->WriteFixedPacked(14, _internal_q(), target);
  }

  // float dist = 15;
  if (!(this->_internal_dist() <= 0 && this->_internal_dist() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(15, this->_internal_dist(), target);
  }

  // float vel_n = 16;
  if (!(this->_internal_vel_n() <= 0 && this->_internal_vel_n() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(16, this->_internal_vel_n(), target);
  }

  // float vel_e = 17;
  if (!(this->_internal_vel_e() <= 0 && this->_internal_vel_e() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(17, this->_internal_vel_e(), target);
  }

  // float vel_d = 18;
  if (!(this->_internal_vel_d() <= 0 && this->_internal_vel_d() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(18, this->_internal_vel_d(), target);
  }

  // float hdg = 19;
  if (!(this->_internal_hdg() <= 0 && this->_internal_hdg() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(19, this->_internal_hdg(), target);
  }

  // float height = 20;
  if (!(this->_internal_height() <= 0 && this->_internal_height() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(20, this->_internal_height(), target);
  }

  // float width = 21;
  if (!(this->_internal_width() <= 0 && this->_internal_width() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(21, this->_internal_width(), target);
  }

  // float depth = 22;
  if (!(this->_internal_depth() <= 0 && this->_internal_depth() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(22, this->_internal_depth(), target);
  }

  // repeated float approach_vector_start = 23;
  if (this->_internal_approach_vector_start_size() > 0) {
    target = stream->WriteFixedPacked(23, _internal_approach_vector_start(), target);
  }

  // repeated float approach_vector_end = 24;
  if (this->_internal_approach_vector_end_size() > 0) {
    target = stream->WriteFixedPacked(24, _internal_approach_vector_end(), target);
  }

  // repeated float approach_velocity = 25;
  if (this->_internal_approach_velocity_size() > 0) {
    target = stream->WriteFixedPacked(25, _internal_approach_velocity(), target);
  }

  // uint32 ttl = 26;
  if (this->_internal_ttl() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(26, this->_internal_ttl(), target);
  }

  // uint32 confidence_overall = 27;
  if (this->_internal_confidence_overall() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(27, this->_internal_confidence_overall(), target);
  }

  // uint32 confidence_detection = 28;
  if (this->_internal_confidence_detection() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(28, this->_internal_confidence_detection(), target);
  }

  // uint32 confidence_classification = 29;
  if (this->_internal_confidence_classification() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(29, this->_internal_confidence_classification(), target);
  }

  // uint32 confidence_localization = 30;
  if (this->_internal_confidence_localization() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(30, this->_internal_confidence_localization(), target);
  }

  // uint32 status_flags = 31;
  if (this->_internal_status_flags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(31, this->_internal_status_flags(), target);
  }

  // uint32 geometry = 32;
  if (this->_internal_geometry() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(32, this->_internal_geometry(), target);
  }

  // string name = 33;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mavsdk.rpc.poi.PoiReport.name");
    target = stream->WriteStringMaybeAliased(
        33, this->_internal_name(), target);
  }

  // string app6_symbol = 34;
  if (!this->_internal_app6_symbol().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_app6_symbol().data(), static_cast<int>(this->_internal_app6_symbol().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mavsdk.rpc.poi.PoiReport.app6_symbol");
    target = stream->WriteStringMaybeAliased(
        34, this->_internal_app6_symbol(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.poi.PoiReport)
  return target;
}

size_t PoiReport::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.poi.PoiReport)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float q = 14;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_q_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    total_size += data_size;
  }

  // repeated float approach_vector_start = 23;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_approach_vector_start_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    total_size += data_size;
  }

  // repeated float approach_vector_end = 24;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_approach_vector_end_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    total_size += data_size;
  }

  // repeated float approach_velocity = 25;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_approach_velocity_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    total_size += data_size;
  }

  // string name = 33;
  if (!this->_internal_name().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string app6_symbol = 34;
  if (!this->_internal_app6_symbol().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_app6_symbol());
  }

  // uint64 uid = 1;
  if (this->_internal_uid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_uid());
  }

  // uint64 time_utc_detected = 2;
  if (this->_internal_time_utc_detected() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_time_utc_detected());
  }

  // uint64 time_utc_updated = 3;
  if (this->_internal_time_utc_updated() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_time_utc_updated());
  }

  // uint32 time_boot_ms = 4;
  if (this->_internal_time_boot_ms() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_time_boot_ms());
  }

  // int32 latitude = 5;
  if (this->_internal_latitude() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_latitude());
  }

  // int32 longitude = 6;
  if (this->_internal_longitude() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_longitude());
  }

  // float alt_msl = 7;
  if (!(this->_internal_alt_msl() <= 0 && this->_internal_alt_msl() >= 0)) {
    total_size += 1 + 4;
  }

  // float alt_ellip = 8;
  if (!(this->_internal_alt_ellip() <= 0 && this->_internal_alt_ellip() >= 0)) {
    total_size += 1 + 4;
  }

  // float alt_ground = 9;
  if (!(this->_internal_alt_ground() <= 0 && this->_internal_alt_ground() >= 0)) {
    total_size += 1 + 4;
  }

  // uint32 classification = 10;
  if (this->_internal_classification() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_classification());
  }

  // float x = 11;
  if (!(this->_internal_x() <= 0 && this->_internal_x() >= 0)) {
    total_size += 1 + 4;
  }

  // float y = 12;
  if (!(this->_internal_y() <= 0 && this->_internal_y() >= 0)) {
    total_size += 1 + 4;
  }

  // float z = 13;
  if (!(this->_internal_z() <= 0 && this->_internal_z() >= 0)) {
    total_size += 1 + 4;
  }

  // float dist = 15;
  if (!(this->_internal_dist() <= 0 && this->_internal_dist() >= 0)) {
    total_size += 1 + 4;
  }

  // float vel_n = 16;
  if (!(this->_internal_vel_n() <= 0 && this->_internal_vel_n() >= 0)) {
    total_size += 2 + 4;
  }

  // float vel_e = 17;
  if (!(this->_internal_vel_e() <= 0 && this->_internal_vel_e() >= 0)) {
    total_size += 2 + 4;
  }

  // float vel_d = 18;
  if (!(this->_internal_vel_d() <= 0 && this->_internal_vel_d() >= 0)) {
    total_size += 2 + 4;
  }

  // float hdg = 19;
  if (!(this->_internal_hdg() <= 0 && this->_internal_hdg() >= 0)) {
    total_size += 2 + 4;
  }

  // float height = 20;
  if (!(this->_internal_height() <= 0 && this->_internal_height() >= 0)) {
    total_size += 2 + 4;
  }

  // float width = 21;
  if (!(this->_internal_width() <= 0 && this->_internal_width() >= 0)) {
    total_size += 2 + 4;
  }

  // float depth = 22;
  if (!(this->_internal_depth() <= 0 && this->_internal_depth() >= 0)) {
    total_size += 2 + 4;
  }

  // uint32 ttl = 26;
  if (this->_internal_ttl() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_ttl());
  }

  // uint32 confidence_overall = 27;
  if (this->_internal_confidence_overall() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_confidence_overall());
  }

  // uint32 confidence_detection = 28;
  if (this->_internal_confidence_detection() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_confidence_detection());
  }

  // uint32 confidence_classification = 29;
  if (this->_internal_confidence_classification() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_confidence_classification());
  }

  // uint32 confidence_localization = 30;
  if (this->_internal_confidence_localization() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_confidence_localization());
  }

  // uint32 status_flags = 31;
  if (this->_internal_status_flags() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_status_flags());
  }

  // uint32 geometry = 32;
  if (this->_internal_geometry() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_geometry());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PoiReport::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PoiReport::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PoiReport::GetClassData() const { return &_class_data_; }

void PoiReport::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<PoiReport *>(to)->MergeFrom(
      static_cast<const PoiReport &>(from));
}


void PoiReport::MergeFrom(const PoiReport& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.poi.PoiReport)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  q_.MergeFrom(from.q_);
  approach_vector_start_.MergeFrom(from.approach_vector_start_);
  approach_vector_end_.MergeFrom(from.approach_vector_end_);
  approach_velocity_.MergeFrom(from.approach_velocity_);
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_app6_symbol().empty()) {
    _internal_set_app6_symbol(from._internal_app6_symbol());
  }
  if (from._internal_uid() != 0) {
    _internal_set_uid(from._internal_uid());
  }
  if (from._internal_time_utc_detected() != 0) {
    _internal_set_time_utc_detected(from._internal_time_utc_detected());
  }
  if (from._internal_time_utc_updated() != 0) {
    _internal_set_time_utc_updated(from._internal_time_utc_updated());
  }
  if (from._internal_time_boot_ms() != 0) {
    _internal_set_time_boot_ms(from._internal_time_boot_ms());
  }
  if (from._internal_latitude() != 0) {
    _internal_set_latitude(from._internal_latitude());
  }
  if (from._internal_longitude() != 0) {
    _internal_set_longitude(from._internal_longitude());
  }
  if (!(from._internal_alt_msl() <= 0 && from._internal_alt_msl() >= 0)) {
    _internal_set_alt_msl(from._internal_alt_msl());
  }
  if (!(from._internal_alt_ellip() <= 0 && from._internal_alt_ellip() >= 0)) {
    _internal_set_alt_ellip(from._internal_alt_ellip());
  }
  if (!(from._internal_alt_ground() <= 0 && from._internal_alt_ground() >= 0)) {
    _internal_set_alt_ground(from._internal_alt_ground());
  }
  if (from._internal_classification() != 0) {
    _internal_set_classification(from._internal_classification());
  }
  if (!(from._internal_x() <= 0 && from._internal_x() >= 0)) {
    _internal_set_x(from._internal_x());
  }
  if (!(from._internal_y() <= 0 && from._internal_y() >= 0)) {
    _internal_set_y(from._internal_y());
  }
  if (!(from._internal_z() <= 0 && from._internal_z() >= 0)) {
    _internal_set_z(from._internal_z());
  }
  if (!(from._internal_dist() <= 0 && from._internal_dist() >= 0)) {
    _internal_set_dist(from._internal_dist());
  }
  if (!(from._internal_vel_n() <= 0 && from._internal_vel_n() >= 0)) {
    _internal_set_vel_n(from._internal_vel_n());
  }
  if (!(from._internal_vel_e() <= 0 && from._internal_vel_e() >= 0)) {
    _internal_set_vel_e(from._internal_vel_e());
  }
  if (!(from._internal_vel_d() <= 0 && from._internal_vel_d() >= 0)) {
    _internal_set_vel_d(from._internal_vel_d());
  }
  if (!(from._internal_hdg() <= 0 && from._internal_hdg() >= 0)) {
    _internal_set_hdg(from._internal_hdg());
  }
  if (!(from._internal_height() <= 0 && from._internal_height() >= 0)) {
    _internal_set_height(from._internal_height());
  }
  if (!(from._internal_width() <= 0 && from._internal_width() >= 0)) {
    _internal_set_width(from._internal_width());
  }
  if (!(from._internal_depth() <= 0 && from._internal_depth() >= 0)) {
    _internal_set_depth(from._internal_depth());
  }
  if (from._internal_ttl() != 0) {
    _internal_set_ttl(from._internal_ttl());
  }
  if (from._internal_confidence_overall() != 0) {
    _internal_set_confidence_overall(from._internal_confidence_overall());
  }
  if (from._internal_confidence_detection() != 0) {
    _internal_set_confidence_detection(from._internal_confidence_detection());
  }
  if (from._internal_confidence_classification() != 0) {
    _internal_set_confidence_classification(from._internal_confidence_classification());
  }
  if (from._internal_confidence_localization() != 0) {
    _internal_set_confidence_localization(from._internal_confidence_localization());
  }
  if (from._internal_status_flags() != 0) {
    _internal_set_status_flags(from._internal_status_flags());
  }
  if (from._internal_geometry() != 0) {
    _internal_set_geometry(from._internal_geometry());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PoiReport::CopyFrom(const PoiReport& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.poi.PoiReport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PoiReport::IsInitialized() const {
  return true;
}

void PoiReport::InternalSwap(PoiReport* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  q_.InternalSwap(&other->q_);
  approach_vector_start_.InternalSwap(&other->approach_vector_start_);
  approach_vector_end_.InternalSwap(&other->approach_vector_end_);
  approach_velocity_.InternalSwap(&other->approach_velocity_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, GetArenaForAllocation(),
      &other->name_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &app6_symbol_, GetArenaForAllocation(),
      &other->app6_symbol_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PoiReport, geometry_)
      + sizeof(PoiReport::geometry_)
      - PROTOBUF_FIELD_OFFSET(PoiReport, uid_)>(
          reinterpret_cast<char*>(&uid_),
          reinterpret_cast<char*>(&other->uid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PoiReport::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_poi_2fpoi_2eproto_getter, &descriptor_table_poi_2fpoi_2eproto_once,
      file_level_metadata_poi_2fpoi_2eproto[2]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace poi
}  // namespace rpc
}  // namespace mavsdk
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::poi::SubscribePoiReportRequest* Arena::CreateMaybeMessage< ::mavsdk::rpc::poi::SubscribePoiReportRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::poi::SubscribePoiReportRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::poi::PoiReportResponse* Arena::CreateMaybeMessage< ::mavsdk::rpc::poi::PoiReportResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::poi::PoiReportResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::poi::PoiReport* Arena::CreateMaybeMessage< ::mavsdk::rpc::poi::PoiReport >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::poi::PoiReport >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
