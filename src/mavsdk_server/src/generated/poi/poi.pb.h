// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: poi/poi.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_poi_2fpoi_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_poi_2fpoi_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3017000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3017003 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "mavsdk_options.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_poi_2fpoi_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_poi_2fpoi_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_poi_2fpoi_2eproto;
namespace mavsdk {
namespace rpc {
namespace poi {
class PoiReport;
struct PoiReportDefaultTypeInternal;
extern PoiReportDefaultTypeInternal _PoiReport_default_instance_;
class PoiReportResponse;
struct PoiReportResponseDefaultTypeInternal;
extern PoiReportResponseDefaultTypeInternal _PoiReportResponse_default_instance_;
class SubscribePoiReportRequest;
struct SubscribePoiReportRequestDefaultTypeInternal;
extern SubscribePoiReportRequestDefaultTypeInternal _SubscribePoiReportRequest_default_instance_;
}  // namespace poi
}  // namespace rpc
}  // namespace mavsdk
PROTOBUF_NAMESPACE_OPEN
template<> ::mavsdk::rpc::poi::PoiReport* Arena::CreateMaybeMessage<::mavsdk::rpc::poi::PoiReport>(Arena*);
template<> ::mavsdk::rpc::poi::PoiReportResponse* Arena::CreateMaybeMessage<::mavsdk::rpc::poi::PoiReportResponse>(Arena*);
template<> ::mavsdk::rpc::poi::SubscribePoiReportRequest* Arena::CreateMaybeMessage<::mavsdk::rpc::poi::SubscribePoiReportRequest>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace mavsdk {
namespace rpc {
namespace poi {

// ===================================================================

class SubscribePoiReportRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.poi.SubscribePoiReportRequest) */ {
 public:
  inline SubscribePoiReportRequest() : SubscribePoiReportRequest(nullptr) {}
  ~SubscribePoiReportRequest() override;
  explicit constexpr SubscribePoiReportRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SubscribePoiReportRequest(const SubscribePoiReportRequest& from);
  SubscribePoiReportRequest(SubscribePoiReportRequest&& from) noexcept
    : SubscribePoiReportRequest() {
    *this = ::std::move(from);
  }

  inline SubscribePoiReportRequest& operator=(const SubscribePoiReportRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribePoiReportRequest& operator=(SubscribePoiReportRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscribePoiReportRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubscribePoiReportRequest* internal_default_instance() {
    return reinterpret_cast<const SubscribePoiReportRequest*>(
               &_SubscribePoiReportRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(SubscribePoiReportRequest& a, SubscribePoiReportRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SubscribePoiReportRequest* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscribePoiReportRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SubscribePoiReportRequest* New() const final {
    return new SubscribePoiReportRequest();
  }

  SubscribePoiReportRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SubscribePoiReportRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SubscribePoiReportRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const SubscribePoiReportRequest& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to, const ::PROTOBUF_NAMESPACE_ID::Message&from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SubscribePoiReportRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mavsdk.rpc.poi.SubscribePoiReportRequest";
  }
  protected:
  explicit SubscribePoiReportRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.poi.SubscribePoiReportRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_poi_2fpoi_2eproto;
};
// -------------------------------------------------------------------

class PoiReportResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.poi.PoiReportResponse) */ {
 public:
  inline PoiReportResponse() : PoiReportResponse(nullptr) {}
  ~PoiReportResponse() override;
  explicit constexpr PoiReportResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PoiReportResponse(const PoiReportResponse& from);
  PoiReportResponse(PoiReportResponse&& from) noexcept
    : PoiReportResponse() {
    *this = ::std::move(from);
  }

  inline PoiReportResponse& operator=(const PoiReportResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PoiReportResponse& operator=(PoiReportResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PoiReportResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const PoiReportResponse* internal_default_instance() {
    return reinterpret_cast<const PoiReportResponse*>(
               &_PoiReportResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(PoiReportResponse& a, PoiReportResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(PoiReportResponse* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PoiReportResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PoiReportResponse* New() const final {
    return new PoiReportResponse();
  }

  PoiReportResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PoiReportResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PoiReportResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const PoiReportResponse& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to, const ::PROTOBUF_NAMESPACE_ID::Message&from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PoiReportResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mavsdk.rpc.poi.PoiReportResponse";
  }
  protected:
  explicit PoiReportResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReportFieldNumber = 1,
  };
  // .mavsdk.rpc.poi.PoiReport report = 1;
  bool has_report() const;
  private:
  bool _internal_has_report() const;
  public:
  void clear_report();
  const ::mavsdk::rpc::poi::PoiReport& report() const;
  PROTOBUF_MUST_USE_RESULT ::mavsdk::rpc::poi::PoiReport* release_report();
  ::mavsdk::rpc::poi::PoiReport* mutable_report();
  void set_allocated_report(::mavsdk::rpc::poi::PoiReport* report);
  private:
  const ::mavsdk::rpc::poi::PoiReport& _internal_report() const;
  ::mavsdk::rpc::poi::PoiReport* _internal_mutable_report();
  public:
  void unsafe_arena_set_allocated_report(
      ::mavsdk::rpc::poi::PoiReport* report);
  ::mavsdk::rpc::poi::PoiReport* unsafe_arena_release_report();

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.poi.PoiReportResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::mavsdk::rpc::poi::PoiReport* report_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_poi_2fpoi_2eproto;
};
// -------------------------------------------------------------------

class PoiReport final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.poi.PoiReport) */ {
 public:
  inline PoiReport() : PoiReport(nullptr) {}
  ~PoiReport() override;
  explicit constexpr PoiReport(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PoiReport(const PoiReport& from);
  PoiReport(PoiReport&& from) noexcept
    : PoiReport() {
    *this = ::std::move(from);
  }

  inline PoiReport& operator=(const PoiReport& from) {
    CopyFrom(from);
    return *this;
  }
  inline PoiReport& operator=(PoiReport&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PoiReport& default_instance() {
    return *internal_default_instance();
  }
  static inline const PoiReport* internal_default_instance() {
    return reinterpret_cast<const PoiReport*>(
               &_PoiReport_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(PoiReport& a, PoiReport& b) {
    a.Swap(&b);
  }
  inline void Swap(PoiReport* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PoiReport* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PoiReport* New() const final {
    return new PoiReport();
  }

  PoiReport* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PoiReport>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PoiReport& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const PoiReport& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to, const ::PROTOBUF_NAMESPACE_ID::Message&from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PoiReport* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mavsdk.rpc.poi.PoiReport";
  }
  protected:
  explicit PoiReport(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kQFieldNumber = 14,
    kApproachVectorStartFieldNumber = 23,
    kApproachVectorEndFieldNumber = 24,
    kApproachVelocityFieldNumber = 25,
    kNameFieldNumber = 33,
    kApp6SymbolFieldNumber = 34,
    kUidFieldNumber = 1,
    kTimeUtcDetectedFieldNumber = 2,
    kTimeUtcUpdatedFieldNumber = 3,
    kTimeBootMsFieldNumber = 4,
    kLatitudeFieldNumber = 5,
    kLongitudeFieldNumber = 6,
    kAltMslFieldNumber = 7,
    kAltEllipFieldNumber = 8,
    kAltGroundFieldNumber = 9,
    kClassificationFieldNumber = 10,
    kXFieldNumber = 11,
    kYFieldNumber = 12,
    kZFieldNumber = 13,
    kDistFieldNumber = 15,
    kVelNFieldNumber = 16,
    kVelEFieldNumber = 17,
    kVelDFieldNumber = 18,
    kHdgFieldNumber = 19,
    kHeightFieldNumber = 20,
    kWidthFieldNumber = 21,
    kDepthFieldNumber = 22,
    kTtlFieldNumber = 26,
    kConfidenceOverallFieldNumber = 27,
    kConfidenceDetectionFieldNumber = 28,
    kConfidenceClassificationFieldNumber = 29,
    kConfidenceLocalizationFieldNumber = 30,
    kStatusFlagsFieldNumber = 31,
    kGeometryFieldNumber = 32,
  };
  // repeated float q = 14;
  int q_size() const;
  private:
  int _internal_q_size() const;
  public:
  void clear_q();
  private:
  float _internal_q(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_q() const;
  void _internal_add_q(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_q();
  public:
  float q(int index) const;
  void set_q(int index, float value);
  void add_q(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      q() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_q();

  // repeated float approach_vector_start = 23;
  int approach_vector_start_size() const;
  private:
  int _internal_approach_vector_start_size() const;
  public:
  void clear_approach_vector_start();
  private:
  float _internal_approach_vector_start(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_approach_vector_start() const;
  void _internal_add_approach_vector_start(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_approach_vector_start();
  public:
  float approach_vector_start(int index) const;
  void set_approach_vector_start(int index, float value);
  void add_approach_vector_start(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      approach_vector_start() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_approach_vector_start();

  // repeated float approach_vector_end = 24;
  int approach_vector_end_size() const;
  private:
  int _internal_approach_vector_end_size() const;
  public:
  void clear_approach_vector_end();
  private:
  float _internal_approach_vector_end(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_approach_vector_end() const;
  void _internal_add_approach_vector_end(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_approach_vector_end();
  public:
  float approach_vector_end(int index) const;
  void set_approach_vector_end(int index, float value);
  void add_approach_vector_end(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      approach_vector_end() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_approach_vector_end();

  // repeated float approach_velocity = 25;
  int approach_velocity_size() const;
  private:
  int _internal_approach_velocity_size() const;
  public:
  void clear_approach_velocity();
  private:
  float _internal_approach_velocity(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_approach_velocity() const;
  void _internal_add_approach_velocity(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_approach_velocity();
  public:
  float approach_velocity(int index) const;
  void set_approach_velocity(int index, float value);
  void add_approach_velocity(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      approach_velocity() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_approach_velocity();

  // string name = 33;
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  PROTOBUF_MUST_USE_RESULT std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // string app6_symbol = 34;
  void clear_app6_symbol();
  const std::string& app6_symbol() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_app6_symbol(ArgT0&& arg0, ArgT... args);
  std::string* mutable_app6_symbol();
  PROTOBUF_MUST_USE_RESULT std::string* release_app6_symbol();
  void set_allocated_app6_symbol(std::string* app6_symbol);
  private:
  const std::string& _internal_app6_symbol() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_app6_symbol(const std::string& value);
  std::string* _internal_mutable_app6_symbol();
  public:

  // uint64 uid = 1;
  void clear_uid();
  ::PROTOBUF_NAMESPACE_ID::uint64 uid() const;
  void set_uid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_uid() const;
  void _internal_set_uid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 time_utc_detected = 2;
  void clear_time_utc_detected();
  ::PROTOBUF_NAMESPACE_ID::uint64 time_utc_detected() const;
  void set_time_utc_detected(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_time_utc_detected() const;
  void _internal_set_time_utc_detected(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 time_utc_updated = 3;
  void clear_time_utc_updated();
  ::PROTOBUF_NAMESPACE_ID::uint64 time_utc_updated() const;
  void set_time_utc_updated(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_time_utc_updated() const;
  void _internal_set_time_utc_updated(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 time_boot_ms = 4;
  void clear_time_boot_ms();
  ::PROTOBUF_NAMESPACE_ID::uint32 time_boot_ms() const;
  void set_time_boot_ms(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_time_boot_ms() const;
  void _internal_set_time_boot_ms(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // int32 latitude = 5;
  void clear_latitude();
  ::PROTOBUF_NAMESPACE_ID::int32 latitude() const;
  void set_latitude(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_latitude() const;
  void _internal_set_latitude(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 longitude = 6;
  void clear_longitude();
  ::PROTOBUF_NAMESPACE_ID::int32 longitude() const;
  void set_longitude(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_longitude() const;
  void _internal_set_longitude(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // float alt_msl = 7;
  void clear_alt_msl();
  float alt_msl() const;
  void set_alt_msl(float value);
  private:
  float _internal_alt_msl() const;
  void _internal_set_alt_msl(float value);
  public:

  // float alt_ellip = 8;
  void clear_alt_ellip();
  float alt_ellip() const;
  void set_alt_ellip(float value);
  private:
  float _internal_alt_ellip() const;
  void _internal_set_alt_ellip(float value);
  public:

  // float alt_ground = 9;
  void clear_alt_ground();
  float alt_ground() const;
  void set_alt_ground(float value);
  private:
  float _internal_alt_ground() const;
  void _internal_set_alt_ground(float value);
  public:

  // uint32 classification = 10;
  void clear_classification();
  ::PROTOBUF_NAMESPACE_ID::uint32 classification() const;
  void set_classification(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_classification() const;
  void _internal_set_classification(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // float x = 11;
  void clear_x();
  float x() const;
  void set_x(float value);
  private:
  float _internal_x() const;
  void _internal_set_x(float value);
  public:

  // float y = 12;
  void clear_y();
  float y() const;
  void set_y(float value);
  private:
  float _internal_y() const;
  void _internal_set_y(float value);
  public:

  // float z = 13;
  void clear_z();
  float z() const;
  void set_z(float value);
  private:
  float _internal_z() const;
  void _internal_set_z(float value);
  public:

  // float dist = 15;
  void clear_dist();
  float dist() const;
  void set_dist(float value);
  private:
  float _internal_dist() const;
  void _internal_set_dist(float value);
  public:

  // float vel_n = 16;
  void clear_vel_n();
  float vel_n() const;
  void set_vel_n(float value);
  private:
  float _internal_vel_n() const;
  void _internal_set_vel_n(float value);
  public:

  // float vel_e = 17;
  void clear_vel_e();
  float vel_e() const;
  void set_vel_e(float value);
  private:
  float _internal_vel_e() const;
  void _internal_set_vel_e(float value);
  public:

  // float vel_d = 18;
  void clear_vel_d();
  float vel_d() const;
  void set_vel_d(float value);
  private:
  float _internal_vel_d() const;
  void _internal_set_vel_d(float value);
  public:

  // float hdg = 19;
  void clear_hdg();
  float hdg() const;
  void set_hdg(float value);
  private:
  float _internal_hdg() const;
  void _internal_set_hdg(float value);
  public:

  // float height = 20;
  void clear_height();
  float height() const;
  void set_height(float value);
  private:
  float _internal_height() const;
  void _internal_set_height(float value);
  public:

  // float width = 21;
  void clear_width();
  float width() const;
  void set_width(float value);
  private:
  float _internal_width() const;
  void _internal_set_width(float value);
  public:

  // float depth = 22;
  void clear_depth();
  float depth() const;
  void set_depth(float value);
  private:
  float _internal_depth() const;
  void _internal_set_depth(float value);
  public:

  // uint32 ttl = 26;
  void clear_ttl();
  ::PROTOBUF_NAMESPACE_ID::uint32 ttl() const;
  void set_ttl(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ttl() const;
  void _internal_set_ttl(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 confidence_overall = 27;
  void clear_confidence_overall();
  ::PROTOBUF_NAMESPACE_ID::uint32 confidence_overall() const;
  void set_confidence_overall(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_confidence_overall() const;
  void _internal_set_confidence_overall(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 confidence_detection = 28;
  void clear_confidence_detection();
  ::PROTOBUF_NAMESPACE_ID::uint32 confidence_detection() const;
  void set_confidence_detection(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_confidence_detection() const;
  void _internal_set_confidence_detection(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 confidence_classification = 29;
  void clear_confidence_classification();
  ::PROTOBUF_NAMESPACE_ID::uint32 confidence_classification() const;
  void set_confidence_classification(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_confidence_classification() const;
  void _internal_set_confidence_classification(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 confidence_localization = 30;
  void clear_confidence_localization();
  ::PROTOBUF_NAMESPACE_ID::uint32 confidence_localization() const;
  void set_confidence_localization(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_confidence_localization() const;
  void _internal_set_confidence_localization(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 status_flags = 31;
  void clear_status_flags();
  ::PROTOBUF_NAMESPACE_ID::uint32 status_flags() const;
  void set_status_flags(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_status_flags() const;
  void _internal_set_status_flags(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 geometry = 32;
  void clear_geometry();
  ::PROTOBUF_NAMESPACE_ID::uint32 geometry() const;
  void set_geometry(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_geometry() const;
  void _internal_set_geometry(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.poi.PoiReport)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > q_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > approach_vector_start_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > approach_vector_end_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > approach_velocity_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr app6_symbol_;
  ::PROTOBUF_NAMESPACE_ID::uint64 uid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 time_utc_detected_;
  ::PROTOBUF_NAMESPACE_ID::uint64 time_utc_updated_;
  ::PROTOBUF_NAMESPACE_ID::uint32 time_boot_ms_;
  ::PROTOBUF_NAMESPACE_ID::int32 latitude_;
  ::PROTOBUF_NAMESPACE_ID::int32 longitude_;
  float alt_msl_;
  float alt_ellip_;
  float alt_ground_;
  ::PROTOBUF_NAMESPACE_ID::uint32 classification_;
  float x_;
  float y_;
  float z_;
  float dist_;
  float vel_n_;
  float vel_e_;
  float vel_d_;
  float hdg_;
  float height_;
  float width_;
  float depth_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ttl_;
  ::PROTOBUF_NAMESPACE_ID::uint32 confidence_overall_;
  ::PROTOBUF_NAMESPACE_ID::uint32 confidence_detection_;
  ::PROTOBUF_NAMESPACE_ID::uint32 confidence_classification_;
  ::PROTOBUF_NAMESPACE_ID::uint32 confidence_localization_;
  ::PROTOBUF_NAMESPACE_ID::uint32 status_flags_;
  ::PROTOBUF_NAMESPACE_ID::uint32 geometry_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_poi_2fpoi_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SubscribePoiReportRequest

// -------------------------------------------------------------------

// PoiReportResponse

// .mavsdk.rpc.poi.PoiReport report = 1;
inline bool PoiReportResponse::_internal_has_report() const {
  return this != internal_default_instance() && report_ != nullptr;
}
inline bool PoiReportResponse::has_report() const {
  return _internal_has_report();
}
inline void PoiReportResponse::clear_report() {
  if (GetArenaForAllocation() == nullptr && report_ != nullptr) {
    delete report_;
  }
  report_ = nullptr;
}
inline const ::mavsdk::rpc::poi::PoiReport& PoiReportResponse::_internal_report() const {
  const ::mavsdk::rpc::poi::PoiReport* p = report_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::poi::PoiReport&>(
      ::mavsdk::rpc::poi::_PoiReport_default_instance_);
}
inline const ::mavsdk::rpc::poi::PoiReport& PoiReportResponse::report() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.poi.PoiReportResponse.report)
  return _internal_report();
}
inline void PoiReportResponse::unsafe_arena_set_allocated_report(
    ::mavsdk::rpc::poi::PoiReport* report) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(report_);
  }
  report_ = report;
  if (report) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.poi.PoiReportResponse.report)
}
inline ::mavsdk::rpc::poi::PoiReport* PoiReportResponse::release_report() {
  
  ::mavsdk::rpc::poi::PoiReport* temp = report_;
  report_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::mavsdk::rpc::poi::PoiReport* PoiReportResponse::unsafe_arena_release_report() {
  // @@protoc_insertion_point(field_release:mavsdk.rpc.poi.PoiReportResponse.report)
  
  ::mavsdk::rpc::poi::PoiReport* temp = report_;
  report_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::poi::PoiReport* PoiReportResponse::_internal_mutable_report() {
  
  if (report_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::poi::PoiReport>(GetArenaForAllocation());
    report_ = p;
  }
  return report_;
}
inline ::mavsdk::rpc::poi::PoiReport* PoiReportResponse::mutable_report() {
  ::mavsdk::rpc::poi::PoiReport* _msg = _internal_mutable_report();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.poi.PoiReportResponse.report)
  return _msg;
}
inline void PoiReportResponse::set_allocated_report(::mavsdk::rpc::poi::PoiReport* report) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete report_;
  }
  if (report) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::mavsdk::rpc::poi::PoiReport>::GetOwningArena(report);
    if (message_arena != submessage_arena) {
      report = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, report, submessage_arena);
    }
    
  } else {
    
  }
  report_ = report;
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.poi.PoiReportResponse.report)
}

// -------------------------------------------------------------------

// PoiReport

// uint64 uid = 1;
inline void PoiReport::clear_uid() {
  uid_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PoiReport::_internal_uid() const {
  return uid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PoiReport::uid() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.poi.PoiReport.uid)
  return _internal_uid();
}
inline void PoiReport::_internal_set_uid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  uid_ = value;
}
inline void PoiReport::set_uid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_uid(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.poi.PoiReport.uid)
}

// uint64 time_utc_detected = 2;
inline void PoiReport::clear_time_utc_detected() {
  time_utc_detected_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PoiReport::_internal_time_utc_detected() const {
  return time_utc_detected_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PoiReport::time_utc_detected() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.poi.PoiReport.time_utc_detected)
  return _internal_time_utc_detected();
}
inline void PoiReport::_internal_set_time_utc_detected(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  time_utc_detected_ = value;
}
inline void PoiReport::set_time_utc_detected(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_time_utc_detected(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.poi.PoiReport.time_utc_detected)
}

// uint64 time_utc_updated = 3;
inline void PoiReport::clear_time_utc_updated() {
  time_utc_updated_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PoiReport::_internal_time_utc_updated() const {
  return time_utc_updated_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PoiReport::time_utc_updated() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.poi.PoiReport.time_utc_updated)
  return _internal_time_utc_updated();
}
inline void PoiReport::_internal_set_time_utc_updated(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  time_utc_updated_ = value;
}
inline void PoiReport::set_time_utc_updated(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_time_utc_updated(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.poi.PoiReport.time_utc_updated)
}

// uint32 time_boot_ms = 4;
inline void PoiReport::clear_time_boot_ms() {
  time_boot_ms_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PoiReport::_internal_time_boot_ms() const {
  return time_boot_ms_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PoiReport::time_boot_ms() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.poi.PoiReport.time_boot_ms)
  return _internal_time_boot_ms();
}
inline void PoiReport::_internal_set_time_boot_ms(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  time_boot_ms_ = value;
}
inline void PoiReport::set_time_boot_ms(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_time_boot_ms(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.poi.PoiReport.time_boot_ms)
}

// int32 latitude = 5;
inline void PoiReport::clear_latitude() {
  latitude_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PoiReport::_internal_latitude() const {
  return latitude_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PoiReport::latitude() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.poi.PoiReport.latitude)
  return _internal_latitude();
}
inline void PoiReport::_internal_set_latitude(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  latitude_ = value;
}
inline void PoiReport::set_latitude(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_latitude(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.poi.PoiReport.latitude)
}

// int32 longitude = 6;
inline void PoiReport::clear_longitude() {
  longitude_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PoiReport::_internal_longitude() const {
  return longitude_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PoiReport::longitude() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.poi.PoiReport.longitude)
  return _internal_longitude();
}
inline void PoiReport::_internal_set_longitude(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  longitude_ = value;
}
inline void PoiReport::set_longitude(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_longitude(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.poi.PoiReport.longitude)
}

// float alt_msl = 7;
inline void PoiReport::clear_alt_msl() {
  alt_msl_ = 0;
}
inline float PoiReport::_internal_alt_msl() const {
  return alt_msl_;
}
inline float PoiReport::alt_msl() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.poi.PoiReport.alt_msl)
  return _internal_alt_msl();
}
inline void PoiReport::_internal_set_alt_msl(float value) {
  
  alt_msl_ = value;
}
inline void PoiReport::set_alt_msl(float value) {
  _internal_set_alt_msl(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.poi.PoiReport.alt_msl)
}

// float alt_ellip = 8;
inline void PoiReport::clear_alt_ellip() {
  alt_ellip_ = 0;
}
inline float PoiReport::_internal_alt_ellip() const {
  return alt_ellip_;
}
inline float PoiReport::alt_ellip() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.poi.PoiReport.alt_ellip)
  return _internal_alt_ellip();
}
inline void PoiReport::_internal_set_alt_ellip(float value) {
  
  alt_ellip_ = value;
}
inline void PoiReport::set_alt_ellip(float value) {
  _internal_set_alt_ellip(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.poi.PoiReport.alt_ellip)
}

// float alt_ground = 9;
inline void PoiReport::clear_alt_ground() {
  alt_ground_ = 0;
}
inline float PoiReport::_internal_alt_ground() const {
  return alt_ground_;
}
inline float PoiReport::alt_ground() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.poi.PoiReport.alt_ground)
  return _internal_alt_ground();
}
inline void PoiReport::_internal_set_alt_ground(float value) {
  
  alt_ground_ = value;
}
inline void PoiReport::set_alt_ground(float value) {
  _internal_set_alt_ground(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.poi.PoiReport.alt_ground)
}

// uint32 classification = 10;
inline void PoiReport::clear_classification() {
  classification_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PoiReport::_internal_classification() const {
  return classification_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PoiReport::classification() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.poi.PoiReport.classification)
  return _internal_classification();
}
inline void PoiReport::_internal_set_classification(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  classification_ = value;
}
inline void PoiReport::set_classification(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_classification(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.poi.PoiReport.classification)
}

// float x = 11;
inline void PoiReport::clear_x() {
  x_ = 0;
}
inline float PoiReport::_internal_x() const {
  return x_;
}
inline float PoiReport::x() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.poi.PoiReport.x)
  return _internal_x();
}
inline void PoiReport::_internal_set_x(float value) {
  
  x_ = value;
}
inline void PoiReport::set_x(float value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.poi.PoiReport.x)
}

// float y = 12;
inline void PoiReport::clear_y() {
  y_ = 0;
}
inline float PoiReport::_internal_y() const {
  return y_;
}
inline float PoiReport::y() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.poi.PoiReport.y)
  return _internal_y();
}
inline void PoiReport::_internal_set_y(float value) {
  
  y_ = value;
}
inline void PoiReport::set_y(float value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.poi.PoiReport.y)
}

// float z = 13;
inline void PoiReport::clear_z() {
  z_ = 0;
}
inline float PoiReport::_internal_z() const {
  return z_;
}
inline float PoiReport::z() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.poi.PoiReport.z)
  return _internal_z();
}
inline void PoiReport::_internal_set_z(float value) {
  
  z_ = value;
}
inline void PoiReport::set_z(float value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.poi.PoiReport.z)
}

// repeated float q = 14;
inline int PoiReport::_internal_q_size() const {
  return q_.size();
}
inline int PoiReport::q_size() const {
  return _internal_q_size();
}
inline void PoiReport::clear_q() {
  q_.Clear();
}
inline float PoiReport::_internal_q(int index) const {
  return q_.Get(index);
}
inline float PoiReport::q(int index) const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.poi.PoiReport.q)
  return _internal_q(index);
}
inline void PoiReport::set_q(int index, float value) {
  q_.Set(index, value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.poi.PoiReport.q)
}
inline void PoiReport::_internal_add_q(float value) {
  q_.Add(value);
}
inline void PoiReport::add_q(float value) {
  _internal_add_q(value);
  // @@protoc_insertion_point(field_add:mavsdk.rpc.poi.PoiReport.q)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
PoiReport::_internal_q() const {
  return q_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
PoiReport::q() const {
  // @@protoc_insertion_point(field_list:mavsdk.rpc.poi.PoiReport.q)
  return _internal_q();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
PoiReport::_internal_mutable_q() {
  return &q_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
PoiReport::mutable_q() {
  // @@protoc_insertion_point(field_mutable_list:mavsdk.rpc.poi.PoiReport.q)
  return _internal_mutable_q();
}

// float dist = 15;
inline void PoiReport::clear_dist() {
  dist_ = 0;
}
inline float PoiReport::_internal_dist() const {
  return dist_;
}
inline float PoiReport::dist() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.poi.PoiReport.dist)
  return _internal_dist();
}
inline void PoiReport::_internal_set_dist(float value) {
  
  dist_ = value;
}
inline void PoiReport::set_dist(float value) {
  _internal_set_dist(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.poi.PoiReport.dist)
}

// float vel_n = 16;
inline void PoiReport::clear_vel_n() {
  vel_n_ = 0;
}
inline float PoiReport::_internal_vel_n() const {
  return vel_n_;
}
inline float PoiReport::vel_n() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.poi.PoiReport.vel_n)
  return _internal_vel_n();
}
inline void PoiReport::_internal_set_vel_n(float value) {
  
  vel_n_ = value;
}
inline void PoiReport::set_vel_n(float value) {
  _internal_set_vel_n(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.poi.PoiReport.vel_n)
}

// float vel_e = 17;
inline void PoiReport::clear_vel_e() {
  vel_e_ = 0;
}
inline float PoiReport::_internal_vel_e() const {
  return vel_e_;
}
inline float PoiReport::vel_e() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.poi.PoiReport.vel_e)
  return _internal_vel_e();
}
inline void PoiReport::_internal_set_vel_e(float value) {
  
  vel_e_ = value;
}
inline void PoiReport::set_vel_e(float value) {
  _internal_set_vel_e(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.poi.PoiReport.vel_e)
}

// float vel_d = 18;
inline void PoiReport::clear_vel_d() {
  vel_d_ = 0;
}
inline float PoiReport::_internal_vel_d() const {
  return vel_d_;
}
inline float PoiReport::vel_d() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.poi.PoiReport.vel_d)
  return _internal_vel_d();
}
inline void PoiReport::_internal_set_vel_d(float value) {
  
  vel_d_ = value;
}
inline void PoiReport::set_vel_d(float value) {
  _internal_set_vel_d(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.poi.PoiReport.vel_d)
}

// float hdg = 19;
inline void PoiReport::clear_hdg() {
  hdg_ = 0;
}
inline float PoiReport::_internal_hdg() const {
  return hdg_;
}
inline float PoiReport::hdg() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.poi.PoiReport.hdg)
  return _internal_hdg();
}
inline void PoiReport::_internal_set_hdg(float value) {
  
  hdg_ = value;
}
inline void PoiReport::set_hdg(float value) {
  _internal_set_hdg(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.poi.PoiReport.hdg)
}

// float height = 20;
inline void PoiReport::clear_height() {
  height_ = 0;
}
inline float PoiReport::_internal_height() const {
  return height_;
}
inline float PoiReport::height() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.poi.PoiReport.height)
  return _internal_height();
}
inline void PoiReport::_internal_set_height(float value) {
  
  height_ = value;
}
inline void PoiReport::set_height(float value) {
  _internal_set_height(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.poi.PoiReport.height)
}

// float width = 21;
inline void PoiReport::clear_width() {
  width_ = 0;
}
inline float PoiReport::_internal_width() const {
  return width_;
}
inline float PoiReport::width() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.poi.PoiReport.width)
  return _internal_width();
}
inline void PoiReport::_internal_set_width(float value) {
  
  width_ = value;
}
inline void PoiReport::set_width(float value) {
  _internal_set_width(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.poi.PoiReport.width)
}

// float depth = 22;
inline void PoiReport::clear_depth() {
  depth_ = 0;
}
inline float PoiReport::_internal_depth() const {
  return depth_;
}
inline float PoiReport::depth() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.poi.PoiReport.depth)
  return _internal_depth();
}
inline void PoiReport::_internal_set_depth(float value) {
  
  depth_ = value;
}
inline void PoiReport::set_depth(float value) {
  _internal_set_depth(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.poi.PoiReport.depth)
}

// repeated float approach_vector_start = 23;
inline int PoiReport::_internal_approach_vector_start_size() const {
  return approach_vector_start_.size();
}
inline int PoiReport::approach_vector_start_size() const {
  return _internal_approach_vector_start_size();
}
inline void PoiReport::clear_approach_vector_start() {
  approach_vector_start_.Clear();
}
inline float PoiReport::_internal_approach_vector_start(int index) const {
  return approach_vector_start_.Get(index);
}
inline float PoiReport::approach_vector_start(int index) const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.poi.PoiReport.approach_vector_start)
  return _internal_approach_vector_start(index);
}
inline void PoiReport::set_approach_vector_start(int index, float value) {
  approach_vector_start_.Set(index, value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.poi.PoiReport.approach_vector_start)
}
inline void PoiReport::_internal_add_approach_vector_start(float value) {
  approach_vector_start_.Add(value);
}
inline void PoiReport::add_approach_vector_start(float value) {
  _internal_add_approach_vector_start(value);
  // @@protoc_insertion_point(field_add:mavsdk.rpc.poi.PoiReport.approach_vector_start)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
PoiReport::_internal_approach_vector_start() const {
  return approach_vector_start_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
PoiReport::approach_vector_start() const {
  // @@protoc_insertion_point(field_list:mavsdk.rpc.poi.PoiReport.approach_vector_start)
  return _internal_approach_vector_start();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
PoiReport::_internal_mutable_approach_vector_start() {
  return &approach_vector_start_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
PoiReport::mutable_approach_vector_start() {
  // @@protoc_insertion_point(field_mutable_list:mavsdk.rpc.poi.PoiReport.approach_vector_start)
  return _internal_mutable_approach_vector_start();
}

// repeated float approach_vector_end = 24;
inline int PoiReport::_internal_approach_vector_end_size() const {
  return approach_vector_end_.size();
}
inline int PoiReport::approach_vector_end_size() const {
  return _internal_approach_vector_end_size();
}
inline void PoiReport::clear_approach_vector_end() {
  approach_vector_end_.Clear();
}
inline float PoiReport::_internal_approach_vector_end(int index) const {
  return approach_vector_end_.Get(index);
}
inline float PoiReport::approach_vector_end(int index) const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.poi.PoiReport.approach_vector_end)
  return _internal_approach_vector_end(index);
}
inline void PoiReport::set_approach_vector_end(int index, float value) {
  approach_vector_end_.Set(index, value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.poi.PoiReport.approach_vector_end)
}
inline void PoiReport::_internal_add_approach_vector_end(float value) {
  approach_vector_end_.Add(value);
}
inline void PoiReport::add_approach_vector_end(float value) {
  _internal_add_approach_vector_end(value);
  // @@protoc_insertion_point(field_add:mavsdk.rpc.poi.PoiReport.approach_vector_end)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
PoiReport::_internal_approach_vector_end() const {
  return approach_vector_end_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
PoiReport::approach_vector_end() const {
  // @@protoc_insertion_point(field_list:mavsdk.rpc.poi.PoiReport.approach_vector_end)
  return _internal_approach_vector_end();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
PoiReport::_internal_mutable_approach_vector_end() {
  return &approach_vector_end_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
PoiReport::mutable_approach_vector_end() {
  // @@protoc_insertion_point(field_mutable_list:mavsdk.rpc.poi.PoiReport.approach_vector_end)
  return _internal_mutable_approach_vector_end();
}

// repeated float approach_velocity = 25;
inline int PoiReport::_internal_approach_velocity_size() const {
  return approach_velocity_.size();
}
inline int PoiReport::approach_velocity_size() const {
  return _internal_approach_velocity_size();
}
inline void PoiReport::clear_approach_velocity() {
  approach_velocity_.Clear();
}
inline float PoiReport::_internal_approach_velocity(int index) const {
  return approach_velocity_.Get(index);
}
inline float PoiReport::approach_velocity(int index) const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.poi.PoiReport.approach_velocity)
  return _internal_approach_velocity(index);
}
inline void PoiReport::set_approach_velocity(int index, float value) {
  approach_velocity_.Set(index, value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.poi.PoiReport.approach_velocity)
}
inline void PoiReport::_internal_add_approach_velocity(float value) {
  approach_velocity_.Add(value);
}
inline void PoiReport::add_approach_velocity(float value) {
  _internal_add_approach_velocity(value);
  // @@protoc_insertion_point(field_add:mavsdk.rpc.poi.PoiReport.approach_velocity)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
PoiReport::_internal_approach_velocity() const {
  return approach_velocity_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
PoiReport::approach_velocity() const {
  // @@protoc_insertion_point(field_list:mavsdk.rpc.poi.PoiReport.approach_velocity)
  return _internal_approach_velocity();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
PoiReport::_internal_mutable_approach_velocity() {
  return &approach_velocity_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
PoiReport::mutable_approach_velocity() {
  // @@protoc_insertion_point(field_mutable_list:mavsdk.rpc.poi.PoiReport.approach_velocity)
  return _internal_mutable_approach_velocity();
}

// uint32 ttl = 26;
inline void PoiReport::clear_ttl() {
  ttl_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PoiReport::_internal_ttl() const {
  return ttl_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PoiReport::ttl() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.poi.PoiReport.ttl)
  return _internal_ttl();
}
inline void PoiReport::_internal_set_ttl(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  ttl_ = value;
}
inline void PoiReport::set_ttl(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ttl(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.poi.PoiReport.ttl)
}

// uint32 confidence_overall = 27;
inline void PoiReport::clear_confidence_overall() {
  confidence_overall_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PoiReport::_internal_confidence_overall() const {
  return confidence_overall_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PoiReport::confidence_overall() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.poi.PoiReport.confidence_overall)
  return _internal_confidence_overall();
}
inline void PoiReport::_internal_set_confidence_overall(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  confidence_overall_ = value;
}
inline void PoiReport::set_confidence_overall(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_confidence_overall(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.poi.PoiReport.confidence_overall)
}

// uint32 confidence_detection = 28;
inline void PoiReport::clear_confidence_detection() {
  confidence_detection_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PoiReport::_internal_confidence_detection() const {
  return confidence_detection_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PoiReport::confidence_detection() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.poi.PoiReport.confidence_detection)
  return _internal_confidence_detection();
}
inline void PoiReport::_internal_set_confidence_detection(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  confidence_detection_ = value;
}
inline void PoiReport::set_confidence_detection(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_confidence_detection(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.poi.PoiReport.confidence_detection)
}

// uint32 confidence_classification = 29;
inline void PoiReport::clear_confidence_classification() {
  confidence_classification_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PoiReport::_internal_confidence_classification() const {
  return confidence_classification_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PoiReport::confidence_classification() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.poi.PoiReport.confidence_classification)
  return _internal_confidence_classification();
}
inline void PoiReport::_internal_set_confidence_classification(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  confidence_classification_ = value;
}
inline void PoiReport::set_confidence_classification(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_confidence_classification(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.poi.PoiReport.confidence_classification)
}

// uint32 confidence_localization = 30;
inline void PoiReport::clear_confidence_localization() {
  confidence_localization_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PoiReport::_internal_confidence_localization() const {
  return confidence_localization_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PoiReport::confidence_localization() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.poi.PoiReport.confidence_localization)
  return _internal_confidence_localization();
}
inline void PoiReport::_internal_set_confidence_localization(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  confidence_localization_ = value;
}
inline void PoiReport::set_confidence_localization(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_confidence_localization(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.poi.PoiReport.confidence_localization)
}

// uint32 status_flags = 31;
inline void PoiReport::clear_status_flags() {
  status_flags_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PoiReport::_internal_status_flags() const {
  return status_flags_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PoiReport::status_flags() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.poi.PoiReport.status_flags)
  return _internal_status_flags();
}
inline void PoiReport::_internal_set_status_flags(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  status_flags_ = value;
}
inline void PoiReport::set_status_flags(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_status_flags(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.poi.PoiReport.status_flags)
}

// uint32 geometry = 32;
inline void PoiReport::clear_geometry() {
  geometry_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PoiReport::_internal_geometry() const {
  return geometry_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PoiReport::geometry() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.poi.PoiReport.geometry)
  return _internal_geometry();
}
inline void PoiReport::_internal_set_geometry(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  geometry_ = value;
}
inline void PoiReport::set_geometry(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_geometry(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.poi.PoiReport.geometry)
}

// string name = 33;
inline void PoiReport::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& PoiReport::name() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.poi.PoiReport.name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void PoiReport::set_name(ArgT0&& arg0, ArgT... args) {
 
 name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:mavsdk.rpc.poi.PoiReport.name)
}
inline std::string* PoiReport::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.poi.PoiReport.name)
  return _s;
}
inline const std::string& PoiReport::_internal_name() const {
  return name_.Get();
}
inline void PoiReport::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* PoiReport::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* PoiReport::release_name() {
  // @@protoc_insertion_point(field_release:mavsdk.rpc.poi.PoiReport.name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void PoiReport::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.poi.PoiReport.name)
}

// string app6_symbol = 34;
inline void PoiReport::clear_app6_symbol() {
  app6_symbol_.ClearToEmpty();
}
inline const std::string& PoiReport::app6_symbol() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.poi.PoiReport.app6_symbol)
  return _internal_app6_symbol();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void PoiReport::set_app6_symbol(ArgT0&& arg0, ArgT... args) {
 
 app6_symbol_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:mavsdk.rpc.poi.PoiReport.app6_symbol)
}
inline std::string* PoiReport::mutable_app6_symbol() {
  std::string* _s = _internal_mutable_app6_symbol();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.poi.PoiReport.app6_symbol)
  return _s;
}
inline const std::string& PoiReport::_internal_app6_symbol() const {
  return app6_symbol_.Get();
}
inline void PoiReport::_internal_set_app6_symbol(const std::string& value) {
  
  app6_symbol_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* PoiReport::_internal_mutable_app6_symbol() {
  
  return app6_symbol_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* PoiReport::release_app6_symbol() {
  // @@protoc_insertion_point(field_release:mavsdk.rpc.poi.PoiReport.app6_symbol)
  return app6_symbol_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void PoiReport::set_allocated_app6_symbol(std::string* app6_symbol) {
  if (app6_symbol != nullptr) {
    
  } else {
    
  }
  app6_symbol_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), app6_symbol,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.poi.PoiReport.app6_symbol)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace poi
}  // namespace rpc
}  // namespace mavsdk

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_poi_2fpoi_2eproto
